{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Apply Naive-Bayes on Data \n",
    "\n",
    "* Step 1: Split the data into train & test data, and apply NaiveBayes with default parameters.\n",
    "* Step 2: Hyperparamter Tuning( Hyperparameter - alpha)\n",
    "* Step 3: Feature Importance (Print top 10 important Feature of +ve and -ve class).\n",
    "* Step 4: Feature Engineering\n",
    "* Step 5: Plot training and crossvalidation accuracy\n",
    "* Step 6: ROC and AUC curve for training and test data\n",
    "* Step 7: Confusion matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# importing necessary modules\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt \n",
    "import seaborn as sns\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.feature_extraction.text import CountVectorizer\n",
    "from sklearn.feature_extraction.text import TfidfVectorizer\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.model_selection import cross_val_score\n",
    "from tqdm import tqdm\n",
    "from sklearn.model_selection import KFold \n",
    "from sklearn.model_selection import GridSearchCV\n",
    "from sklearn.metrics import confusion_matrix\n",
    "from sklearn.metrics import roc_curve\n",
    "from sklearn.metrics import roc_auc_score\n",
    "from sklearn.metrics import precision_score\n",
    "from sklearn.metrics import recall_score\n",
    "from sklearn.metrics import f1_score\n",
    "from sklearn.metrics import accuracy_score\n",
    "from gensim.models import Word2Vec\n",
    "from sklearn.naive_bayes import MultinomialNB"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# reading dataset\n",
    "df=pd.read_csv(r'D:\\study material\\ML\\Datasets\\amazon-fine-food-reviews\\Reviews_cleaned.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ProductId</th>\n",
       "      <th>UserId</th>\n",
       "      <th>HelpfulnessNumerator</th>\n",
       "      <th>HelpfulnessDenominator</th>\n",
       "      <th>Score</th>\n",
       "      <th>Time</th>\n",
       "      <th>Clean_Text</th>\n",
       "      <th>clean_summary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>B001E4KFG0</td>\n",
       "      <td>A3SGXH7AUHU8GW</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1303862400</td>\n",
       "      <td>bought several vitality canned dog food produc...</td>\n",
       "      <td>good quality dog food</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>B00813GRG4</td>\n",
       "      <td>A1D87F6ZCVE5NK</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1346976000</td>\n",
       "      <td>product arrived labeled jumbo salted peanut pe...</td>\n",
       "      <td>not advertised</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>B000LQOCH0</td>\n",
       "      <td>ABXLMWJIXXAIN</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1219017600</td>\n",
       "      <td>confection around century light pillowy citrus...</td>\n",
       "      <td>delight say</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>B000UA0QIQ</td>\n",
       "      <td>A395BORC6FGVXV</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1307923200</td>\n",
       "      <td>looking secret ingredient robitussin believe f...</td>\n",
       "      <td>cough medicine</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>B006K2ZZ7K</td>\n",
       "      <td>A1UQRSCLF8GW1T</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1350777600</td>\n",
       "      <td>great taffy great price wide assortment yummy ...</td>\n",
       "      <td>great taffy</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    ProductId          UserId  HelpfulnessNumerator  HelpfulnessDenominator  \\\n",
       "0  B001E4KFG0  A3SGXH7AUHU8GW                     1                       1   \n",
       "1  B00813GRG4  A1D87F6ZCVE5NK                     0                       0   \n",
       "2  B000LQOCH0   ABXLMWJIXXAIN                     1                       1   \n",
       "3  B000UA0QIQ  A395BORC6FGVXV                     3                       3   \n",
       "4  B006K2ZZ7K  A1UQRSCLF8GW1T                     0                       0   \n",
       "\n",
       "   Score        Time                                         Clean_Text  \\\n",
       "0      1  1303862400  bought several vitality canned dog food produc...   \n",
       "1      0  1346976000  product arrived labeled jumbo salted peanut pe...   \n",
       "2      1  1219017600  confection around century light pillowy citrus...   \n",
       "3      0  1307923200  looking secret ingredient robitussin believe f...   \n",
       "4      1  1350777600  great taffy great price wide assortment yummy ...   \n",
       "\n",
       "            clean_summary  \n",
       "0  good quality dog food   \n",
       "1         not advertised   \n",
       "2            delight say   \n",
       "3         cough medicine   \n",
       "4            great taffy   "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# now sampling points with equal number of positve and negative class\n",
    "pos_pts=df[df['Score']==1].sample(n=10000,random_state=21)\n",
    "neg_pts=df[df['Score']==0].sample(n=10000,random_state=21)\n",
    "df=pd.concat([pos_pts,neg_pts])\n",
    "df['Time'] = pd.to_datetime(df['Time'], origin='unix', unit='s')\n",
    "df.sort_values('Time',inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    10000\n",
       "0    10000\n",
       "Name: Score, dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Score'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train,X_test,y_train,y_test=train_test_split(df['Clean_Text'],df['Score'],test_size=0.3,random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(14000,)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(14000,)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_train.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 1. Apply Naive Bayes on Binary BOW vectors"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1.1 spliting data as train and test ,and applying naive bayes with default parameter on the train data "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "# applying Bag of words on both test and training data\n",
    "def conv_bow(X_train,X_test):\n",
    "    count_vect=CountVectorizer(ngram_range=(1,2),min_df=10,max_features=5000)\n",
    "    X_train_vect=count_vect.fit_transform(X_train).toarray()\n",
    "    X_test_vect=count_vect.transform(X_test).toarray()\n",
    "    return X_train_vect,X_test_vect"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train_vect,X_test_vect=conv_bow(X_train,X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(14000, 5000)"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train_vect.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6000, 5000)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_test_vect.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.868\n"
     ]
    }
   ],
   "source": [
    "#Applying knn on the data with default values\n",
    "nv=MultinomialNB()\n",
    "nv.fit(X_train_vect,y_train)\n",
    "print(\"{:0.3f}\".format(nv.score(X_test_vect,y_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1.2 Performing K-Fold cross validation to find best value of 'alpha'."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "hyper_param=[0.00001,0.0001,0.001,0.01,0.1,1,10,100,1000,10000]\n",
    "score=[]\n",
    "for i in hyper_param:\n",
    "    nv.alpha=i\n",
    "    temp=cross_val_score(nv,X_train_vect,y_train,cv=10,scoring='f1')  \n",
    "    score.append(np.mean(temp))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(hyper_param,score)\n",
    "plt.xlabel(\"Hyperparameter\")\n",
    "plt.ylabel(\"Accuracy\")\n",
    "plt.title(\"Hyperparameter vs f1 score\")\n",
    "plt.grid()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [],
   "source": [
    "# overfitting vs underfitting \n",
    "X_tr,X_cv,y_tr,y_cv=train_test_split(X_train,y_train,test_size=0.3,random_state=42)\n",
    "X_tr_vect,X_cv_vect=conv_bow(X_tr,X_cv)\n",
    "train_ac=[]\n",
    "test_ac=[]\n",
    "for i in hyper_param:\n",
    "    nv.alpha=i\n",
    "    nv.fit(X_tr_vect,y_tr)\n",
    "    y_pred=nv.predict(X_tr_vect)\n",
    "    train_ac.append(accuracy_score(y_pred,y_tr))\n",
    "    y_pred=nv.predict(X_cv_vect)\n",
    "    test_ac.append(accuracy_score(y_pred,y_cv))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.lineplot(hyper_param,train_ac,label=\"Training Data\")\n",
    "sns.lineplot(hyper_param,test_ac,label=\"Test_Data\")\n",
    "plt.ylabel(\"error\")\n",
    "plt.xlabel(\"Hyperparameter\")\n",
    "plt.grid()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1.3 Applying Naive-Bayes on Bow with best value of alpha(0.001)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The accuracy is 86.80\n"
     ]
    }
   ],
   "source": [
    "nv.alpha=0.1\n",
    "nv.fit(X_train_vect,y_train)\n",
    "print(\"The accuracy is {:0.2f}\".format(nv.score(X_test_vect,y_test)*100))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1.4 ROC-Curve and AUC value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "prob_tr=nv.predict_proba(X_train_vect)[:,1]\n",
    "prob_ts=nv.predict_proba(X_test_vect)[:,1]\n",
    "\n",
    "fpr1,tpr1,threshold=roc_curve(y_train,prob_tr)\n",
    "fpr2,tpr2,threshold=roc_curve(y_test,prob_ts)\n",
    "auc2=roc_auc_score(y_test,prob_ts)\n",
    "auc1=roc_auc_score(y_train,prob_tr)\n",
    "\n",
    "sns.lineplot(fpr1,tpr1,label='Training AUC={:0.2f}'.format(auc1))\n",
    "sns.lineplot(fpr2,tpr2,label='Test AUC={:0.2f}'.format(auc2))\n",
    "sns.lineplot([0,1],[0,1],)\n",
    "plt.title(\"ROC curve\")\n",
    "plt.xlabel(\"TPR\")\n",
    "plt.ylabel(\"FPR\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1.5 Confusion Matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "y_pred=nv.predict(X_test_vect)\n",
    "con=confusion_matrix(y_test,y_pred)\n",
    "d=pd.DataFrame(con,index=['Negative','Positive'],columns=['Negative','Positive'])\n",
    "sns.heatmap(d,annot=True,fmt='d',cmap=\"coolwarm\")\n",
    "plt.title(\"Confusion Matrix\")\n",
    "plt.xlabel(\"True Label\")\n",
    "plt.ylabel(\"Predicted Label\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Precision Score:0.87\n",
      "\n",
      "Recall score:0.87\n",
      "\n",
      "F1-score:0.87\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# precision, recall and F1-score\n",
    "y_pred=nv.predict(X_test_vect)\n",
    "print(\"Precision Score:{:0.2f}\\n\".format(precision_score(y_pred,y_test)))\n",
    "print(\"Recall score:{:0.2f}\\n\".format(recall_score(y_pred,y_test)))\n",
    "print(\"F1-score:{:0.2f}\\n\".format(f1_score(y_pred,y_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 2. Apply Naive Bayes on Tfidf-bow vectors"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.1 spliting data as train and test ,and applying naive bayes with default parameter on the train data "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "# applying Bag of words on both test and training data\n",
    "def conv_tfidf(X_train,X_test):\n",
    "    count_vect=TfidfVectorizer(ngram_range=(1,2),min_df=10,max_features=2500)\n",
    "    X_train_vect=count_vect.fit_transform(X_train).toarray()\n",
    "    X_test_vect=count_vect.transform(X_test).toarray()\n",
    "    return X_train_vect,X_test_vect"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train_vect,X_test_vect=conv_tfidf(X_train,X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(14000, 2500)"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train_vect.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6000, 2500)"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_test_vect.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.862\n"
     ]
    }
   ],
   "source": [
    "#Applying knn on the data with default values\n",
    "nv=MultinomialNB()\n",
    "nv.fit(X_train_vect,y_train)\n",
    "print(\"{:0.3f}\".format(nv.score(X_test_vect,y_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.2 Performing K-Fold cross validation to find best value of 'alpha'."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "hyper_param=[0.001,0.001,0.01,0.1,1,10,100]\n",
    "score=[]\n",
    "for i in hyper_param:\n",
    "    nv.alpha=i\n",
    "    temp=cross_val_score(nv,X_train_vect,y_train,cv=10,scoring='accuracy')  \n",
    "    score.append(np.mean(temp))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(hyper_param,score)\n",
    "plt.xlabel(\"Hyperparameter\")\n",
    "plt.ylabel(\"Accuracy\")\n",
    "plt.title(\"Hyperparameter vs Accuracy\")\n",
    "# plt.ylim(0,1)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "# overfitting vs underfitting \n",
    "X_tr,X_cv,y_tr,y_cv=train_test_split(X_train,y_train,test_size=0.3,random_state=42)\n",
    "X_tr_vect,X_cv_vect=conv_tfidf(X_tr,X_cv)\n",
    "train_ac=[]\n",
    "test_ac=[]\n",
    "for i in hyper_param:\n",
    "    nv.alpha=i\n",
    "    nv.fit(X_tr_vect,y_tr)\n",
    "    y_pred=nv.predict(X_tr_vect)\n",
    "    train_ac.append(accuracy_score(y_pred,y_tr))\n",
    "    y_pred=nv.predict(X_cv_vect)\n",
    "    test_ac.append(accuracy_score(y_pred,y_cv))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.lineplot(hyper_param,train_ac,label=\"Training Data\")\n",
    "sns.lineplot(hyper_param,test_ac,label=\"Test_Data\")\n",
    "plt.ylabel(\"Accuracy\")\n",
    "plt.xlabel(\"Hyperparameter\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.3 Applying Naive-Bayes on Tfidf-Bow with best value of alpha(0.001)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The accuracy is 86.55\n"
     ]
    }
   ],
   "source": [
    "nv.alpha=10\n",
    "nv.fit(X_train_vect,y_train)\n",
    "print(\"The accuracy is {:0.2f}\".format(nv.score(X_test_vect,y_test)*100))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.4 ROC-Curve and AUC value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "prob_tr=nv.predict_proba(X_train_vect)[:,1]\n",
    "prob_ts=nv.predict_proba(X_test_vect)[:,1]\n",
    "\n",
    "fpr1,tpr1,threshold=roc_curve(y_train,prob_tr)\n",
    "fpr2,tpr2,threshold=roc_curve(y_test,prob_ts)\n",
    "auc2=roc_auc_score(y_test,prob_ts)\n",
    "auc1=roc_auc_score(y_train,prob_tr)\n",
    "\n",
    "sns.lineplot(fpr1,tpr1,label='Train ={:0.2f}'.format(auc1))\n",
    "sns.lineplot(fpr2,tpr2,label='Test ={:0.2f}'.format(auc2))\n",
    "sns.lineplot([0,1],[0,1],)\n",
    "plt.title(\"ROC curve\")\n",
    "plt.xlabel(\"TPR\")\n",
    "plt.ylabel(\"FPR\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.5 Confusion Matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "y_pred=nv.predict(X_test_vect)\n",
    "con=confusion_matrix(y_test,y_pred)\n",
    "d=pd.DataFrame(con,index=['Negative','Positive'],columns=['Negative','Positive'])\n",
    "sns.heatmap(d,annot=True,fmt='d',cmap=\"coolwarm\")\n",
    "plt.title(\"Confusion Matrix\")\n",
    "plt.xlabel(\"True Label\")\n",
    "plt.ylabel(\"Predicted Label\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Precision Score:0.87\n",
      "\n",
      "Recall score:0.87\n",
      "\n",
      "F1-score:0.87\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# precision, recall and F1-score\n",
    "y_pred=nv.predict(X_test_vect)\n",
    "print(\"Precision Score:{:0.2f}\\n\".format(precision_score(y_pred,y_test)))\n",
    "print(\"Recall score:{:0.2f}\\n\".format(recall_score(y_pred,y_test)))\n",
    "print(\"F1-score:{:0.2f}\\n\".format(f1_score(y_pred,y_test)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
